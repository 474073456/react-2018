{"version":3,"sources":["pages/Input.js","pages/List.js","pages/TodoList.js","index.js"],"names":["Input","props","ref","this","refs","value","type","onChange","onClick","addTodo","Component","List","renderTodos","done","todos","map","todo","idx","toggle","checked","title","delButton","console","log","tds","arr1","filter","item","arr2","length","TodoList","handleChange","e","setState","inpValue","target","state","index","localStorage","setItem","JSON","stringify","newTodos","input","focus","getItem","parse","inp","ReactDOM","render","document","getElementById"],"mappings":"6KAyBeA,E,kDApBX,WAAYC,GAAO,uCACTA,G,qDAGN,OACI,6BACI,2BACIC,IAAKC,KAAKF,MAAMG,KAChBC,MAAOF,KAAKF,MAAMI,MAClBC,KAAK,OACLC,SAAUJ,KAAKF,MAAMM,WAEzB,4BAAQC,QAASL,KAAKF,MAAMQ,SAA5B,qB,GAbIC,aCkCLC,E,kDApCX,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IAEVW,YAAc,SAACC,GACX,OAAO,EAAKZ,MAAMa,MAAMC,KAAI,SAACC,EAAMC,GAC/B,GAAIJ,GAAQG,EAAKH,KACb,OAAO,4BACH,2BACIL,QAAS,kBAAM,EAAKP,MAAMiB,OAAOD,IACjCE,QAASN,EAAMP,KAAK,aACxB,8BAAOU,EAAKI,OACZ,4BAAQZ,QAAS,kBAAM,EAAKP,MAAMoB,UAAUJ,KAA5C,qBAXG,E,qDAiBfK,QAAQC,IAAIpB,KAAKF,OACjB,IAAIuB,EAAMrB,KAAKF,MAAMa,MACjBW,EAAOD,EAAIE,QAAO,SAACC,GAAD,OAAWA,EAAKd,QAClCe,EAAOJ,EAAIE,QAAO,SAAAC,GAAI,OAAIA,EAAKd,QACnC,OACI,6BACI,uDAASY,EAAKI,QACd,4BACK1B,KAAKS,aAAY,IAEtB,uDAASgB,EAAKC,QACd,4BACK1B,KAAKS,aAAY,S,GA9BnBF,aCkFJoB,E,kDA9EX,WAAY7B,GAAQ,IAAD,8BACf,cAAMA,IAMV8B,aAAe,SAACC,GACZ,EAAKC,SAAS,CAAEC,SAAUF,EAAEG,OAAO9B,SARpB,EA2BnBI,QAAU,WACsB,KAAxB,EAAK2B,MAAMF,WACX,EAAKD,SAAS,CACVnB,MAAM,CACF,CACIM,MAAO,EAAKgB,MAAMF,SAClBrB,MAAM,IAHT,mBAKE,EAAKuB,MAAMtB,UAM1B,EAAKsB,MAAMF,SAAW,KAzCP,EA2CnBb,UAAY,SAACJ,GACT,EAAKgB,SAAS,CAEVnB,MAAO,EAAKsB,MAAMtB,MAAMY,QAAO,SAACC,EAAMU,GAAP,OAAiBA,GAASpB,OAC1D,WACCqB,aAAaC,QACT,QACAC,KAAKC,UAAU,EAAKL,MAAMtB,YAlDnB,EAsDnBI,OAAS,SAACmB,GACN,IAAIK,EAAW,EAAKN,MAAMtB,MAC1B4B,EAASL,GAAOxB,MAAQ6B,EAASL,GAAOxB,KACxC,EAAKoB,SAAS,CACVnB,MAAO4B,KAxDX,EAAKN,MAAQ,CACTF,SAAU,GACVpB,MAAO,CAAC,CAAEM,MAAO,MAAOP,MAAM,KAJnB,E,gEAYfV,KAAKwC,MAAMC,QACX,IAAI9B,EAAQwB,aAAaO,QAAQ,SAC7B/B,GACAX,KAAK8B,SAAS,CACVnB,MAAO0B,KAAKM,MAAMhC,O,2CAK1BwB,aAAaC,QACT,QACAC,KAAKC,UAAUtC,KAAKiC,MAAMtB,U,+BAsCxB,IAAD,SACuBX,KAAKiC,MAD5B,EACGtB,MADH,EACUoB,SACf,OACI,6BACI,kBAAC,EAAD,CAAOzB,QAASN,KAAKM,QACjBJ,MAAOF,KAAKiC,MAAMF,SAClB3B,SAAUJ,KAAK4B,aACf3B,KAAM,SAAA2C,GAAG,OAAI,EAAKJ,MAAQI,KAC9B,kBAAC,EAAD,CAAM1B,UAAWlB,KAAKkB,UAChBH,OAAUf,KAAKe,OACfJ,MAASX,KAAKiC,MAAMtB,a,GAxEnBJ,aCAvBsC,IAASC,OACR,kBAAC,EAAD,MACCC,SAASC,eAAe,U","file":"static/js/main.f136b8da.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// const btns = '添加';\r\n\r\nclass Input extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input\r\n                    ref={this.props.refs}\r\n                    value={this.props.value}\r\n                    type=\"text\"\r\n                    onChange={this.props.onChange}\r\n                />\r\n                <button onClick={this.props.addTodo}>\r\n                    添加\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input\r\n","import React, { Component } from 'react'\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    renderTodos = (done) => {\r\n        return this.props.todos.map((todo, idx) => {\r\n            if (done == todo.done) {\r\n                return <li>\r\n                    <input\r\n                        onClick={() => this.props.toggle(idx)}\r\n                        checked={done} type=\"checkbox\" />\r\n                    <span>{todo.title}</span>\r\n                    <button onClick={() => this.props.delButton(idx)}>删除</button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        console.log(this.props);\r\n        let tds = this.props.todos;\r\n        let arr1 = tds.filter((item) => !item.done)\r\n        let arr2 = tds.filter(item => item.done)\r\n        return (\r\n            <div>\r\n                <h2>正在进行{arr1.length}</h2>\r\n                <ul>\r\n                    {this.renderTodos(false)}\r\n                </ul>\r\n                <h2>已经完成{arr2.length}</h2>\r\n                <ul>\r\n                    {this.renderTodos(true)}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List\r\n","import React, { Component } from 'react';\r\nimport Input from './Input';\r\nimport List from './List';\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inpValue: '',\r\n            todos: [{ title: '123', done: false }]\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ inpValue: e.target.value })\r\n        //与state里面的inpValue绑定监听内容\r\n    }\r\n    componentDidMount() {\r\n        this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if (todos) {\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n\r\n    addTodo = () => {\r\n        if (this.state.inpValue !== '') {\r\n            this.setState({\r\n                todos: [\r\n                    {\r\n                        title: this.state.inpValue,\r\n                        done: false\r\n                    },\r\n                    ...this.state.todos\r\n                ]\r\n            })\r\n        } else {\r\n            return;\r\n        }\r\n        this.state.inpValue = '';\r\n    }\r\n    delButton = (idx) => {\r\n        this.setState({\r\n            //异步调用\r\n            todos: this.state.todos.filter((item, index) => index != idx)\r\n        }, () => {\r\n            localStorage.setItem(\r\n                'todos',\r\n                JSON.stringify(this.state.todos)\r\n            )\r\n        });\r\n    }\r\n    toggle = (index) => {\r\n        let newTodos = this.state.todos  //深拷贝\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    render() {\r\n        const { todos, inpValue } = this.state;\r\n        return (\r\n            <div>\r\n                <Input addTodo={this.addTodo}\r\n                    value={this.state.inpValue}\r\n                    onChange={this.handleChange}\r\n                    refs={inp => this.input = inp} />\r\n                <List delButton={this.delButton}\r\n                      toggle = {this.toggle}\r\n                      todos = {this.state.todos}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './pages/TodoList.js';\n\nReactDOM.render(\n <TodoList/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}